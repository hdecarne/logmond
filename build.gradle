// Plugins
plugins {
	id "java"
	id "jacoco"
	id "eclipse"
	id "org.sonarqube" version "2.6.2"
}
// Build helpers
def snapshotBuild = project.version.endsWith("-SNAPSHOT")

def resolveProperty(propertyName, envName) {
	def resolved = (project.findProperty(propertyName) ?: System.getenv(envName));

	if(resolved == null) {
		throw new GradleException("Missing property/environment variable: '${propertyName}'/'${envName}")
	}
	return resolved; 
}

// Project
sourceCompatibility = JavaVersion.VERSION_1_9
targetCompatibility = JavaVersion.VERSION_1_9

repositories {
	jcenter()
	maven { url "https://oss.jfrog.org/libs-release/" }
	if(snapshotBuild) {
		maven { url "https://oss.jfrog.org/libs-snapshot/" }
	}
}

dependencies {
	compile("de.carne.common:java-lwjsd-api:0.4.0-SNAPSHOT")
	testImplementation("de.carne.common:java-lwjsd-runtime:0.4.0-SNAPSHOT")
	testImplementation("org.junit.jupiter:junit-jupiter-api:5.1.0")
	testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.1.0")
	testRuntimeOnly("org.junit.platform:junit-platform-launcher:1.0.3")
}

test {
	useJUnitPlatform()
}

jacoco {
	toolVersion = "0.8.0"
}

jacocoTestReport {
	reports {
		xml.enabled false
		html.enabled true
		html.destination file("${buildDir}/reports/jacoco")
		csv.enabled false
	}
}

eclipse {
	classpath {
		downloadSources = true
		downloadJavadoc = true
	}
}
