// Plugins
plugins {
	id "java-library"
	id "jacoco"
	id "eclipse"
	id "org.sonarqube" version "2.6.2"
}
// Build helpers
def snapshotBuild = project.version.endsWith("-SNAPSHOT")

def resolveProperty(propertyName, envName) {
	def resolved = (project.findProperty(propertyName) ?: System.getenv(envName));

	if(resolved == null) {
		throw new GradleException("Missing property/environment variable: '${propertyName}'/'${envName}'")
	}
	return resolved; 
}

// Project
sourceCompatibility = JavaVersion.VERSION_1_10
targetCompatibility = JavaVersion.VERSION_1_10

repositories {
	if(snapshotBuild) {
		mavenLocal()
		maven { url "https://oss.jfrog.org/libs-snapshot/" }
	}
	jcenter()
	maven { url "https://oss.jfrog.org/libs-release/" }
}

dependencies {
	implementation(group: "de.carne.common", name: "java-lwjsd-api", version: "0.4.0-SNAPSHOT")
	implementation(group: "org.junit.jupiter", name: "junit-jupiter-api", version: "5.3.1")
	testRuntimeOnly(group: "org.junit.jupiter", name: "junit-jupiter-engine", version: "5.3.1")
	testImplementation(group: "de.carne.common", name: "java-lwjsd-runtime", version: "0.4.0-SNAPSHOT")
}

test {
	useJUnitPlatform()
}

jacoco {
	toolVersion = "0.8.2"
}

jacocoTestReport {
	reports {
		xml.enabled false
		html.enabled true
		html.destination file("${buildDir}/reports/jacoco")
		csv.enabled false
	}
}

eclipse {
	classpath {
		downloadSources = true
		downloadJavadoc = true
	}
}
